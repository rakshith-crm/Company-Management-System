{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithcrm/Desktop/Rakshith/Languages/PERN Stack/Employee Management System/client/src/components/Job.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Job = () => {\n  _s();\n\n  const [AllJobs, setJobs] = useState([]);\n\n  const GetJobs = async () => {\n    try {\n      const query = await fetch('http://localhost:5000/jobs');\n      const data = await query.json();\n      setJobs(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    GetJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"mt-5 table table-borderless table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Minimum Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Maximum Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: AllJobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.job_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.job_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.min_salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.max_salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this)]\n        }, job.job_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Job, \"6S9Sy0Fw3ZYUEbtIaB//IK9Pb90=\");\n\n_c = Job;\nexport default Job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Job\");","map":{"version":3,"sources":["/Users/rakshithcrm/Desktop/Rakshith/Languages/PERN Stack/Employee Management System/client/src/components/Job.js"],"names":["React","useState","useEffect","Job","AllJobs","setJobs","GetJobs","query","fetch","data","json","error","console","log","map","job","job_id","job_title","min_salary","max_salary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;AAEA,MAAMC,GAAG,GAAG,MAAI;AAAA;;AACZ,QAAM,CAACC,OAAD,EAASC,OAAT,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMK,OAAO,GAAE,YAAS;AACpB,QAAI;AACA,YAAMC,KAAK,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAAzB;AACA,YAAMC,IAAI,GAAG,MAAMF,KAAK,CAACG,IAAN,EAAnB;AACAL,MAAAA,OAAO,CAACI,IAAD,CAAP;AACH,KAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GARD;;AASAT,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,OAAO;AACV,GAFQ,EAEP,EAFO,CAAT;AAGJ,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAO,MAAA,KAAK,EAAC,wCAAb;AAAA,8BACE;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAI,YAAA,KAAK,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBACDF,OAAO,CAACU,GAAR,CAAYC,GAAG,iBACZ;AAAA,kCACI;AAAA,sBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKF,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKH,GAAG,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAASJ,GAAG,CAACC,MAAb;AAAA;AAAA;AAAA;AAAA,gBADH;AADC;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA2BC,CAzCD;;GAAMb,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\n\nconst Job = ()=>{\n    const [AllJobs,setJobs] = useState([]);\n    const GetJobs= async()=>{\n        try {\n            const query = await fetch('http://localhost:5000/jobs');\n            const data = await query.json();\n            setJobs(data);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    useEffect(()=>{\n        GetJobs();\n    },[]);\nreturn (\n<div className='p-5'>\n<h1>All Jobs</h1>\n<hr></hr>\n<table class=\"mt-5 table table-borderless table-dark\">\n  <thead>\n    <tr className='bg-info'>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Job Title</th>\n      <th scope=\"col\">Minimum Salary</th>\n      <th scope=\"col\">Maximum Salary</th>\n      <th scope=\"col\"></th>\n    </tr>\n  </thead>\n  <tbody>\n{AllJobs.map(job => (\n    <tr key={job.job_id}>\n        <td>{job.job_id}</td>\n        <td>{job.job_title}</td>\n        <td>{job.min_salary}</td>\n        <td>{job.max_salary}</td>\n    </tr>\n))}\n  </tbody>\n</table>\n</div>\n);\n};\n\nexport default Job;"]},"metadata":{},"sourceType":"module"}